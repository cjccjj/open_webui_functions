name: Plugin Release

on:
  push:
    tags:
      - '*/v*' # This will match tags like my-plugin/v1.0.0 and my-plugin/v1.1.0rc1

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # Step 1: Checkout the code (fetch all history)
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # IMPORTANT: Needed for git log between tags

      # Step 2: Parse tag name
      - name: Parse Tag
        id: parse_tag
        run: .github/scripts/parse_tag.sh
        # GITHUB_REF_NAME is implicitly available to the script

      # Step 3: Find Plugin File Path
      - name: Find Plugin File
        id: find_plugin_file
        run: .github/scripts/find_plugin_file.sh
        env:
          PLUGIN_NAME: ${{ steps.parse_tag.outputs.plugin_name }}

      # Step 4: Generate Changelog using external script
      - name: Generate Changelog
        id: changelog
        run: .github/scripts/generate_changelog.sh
        env:
          PLUGIN_NAME: ${{ steps.parse_tag.outputs.plugin_name }}
          CURRENT_TAG: ${{ github.ref_name }}
          PLUGIN_PATH: ${{ steps.find_plugin_file.outputs.plugin_path }}

      # Step 5: Create the GitHub Draft Release
      - name: Create Draft Release for Verification
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ steps.parse_tag.outputs.plugin_name }} ${{ steps.parse_tag.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog_body }}
          files: ${{ steps.find_plugin_file.outputs.plugin_path }}
          draft: true # Create a draft release instead of publishing immediately
          # Dynamically set prerelease based on the parsed tag
          prerelease: ${{ steps.parse_tag.outputs.is_prerelease == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}