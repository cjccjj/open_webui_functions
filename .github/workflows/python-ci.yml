name: Python CI

on:
  pull_request:
    branches: [ main, master ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Needed for actions/checkout

    strategy:
      matrix:
        python-version: ['3.11']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run pytest and generate report
      # Use || true to ensure the step doesn't fail the job if tests fail,
      # allowing the artifact upload to always happen.
      run: pytest --junitxml=test-results.xml tests/test_gemini_manifold.py || true

    - name: Upload Test Results
      # Always upload artifacts, even if tests failed
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-python-${{ matrix.python-version }} # Unique name for each matrix combination
        path: test-results.xml

  # Add a separate job to upload the event file
  # This is crucial for the second workflow to correctly identify the PR context
  upload-event-file:
    name: Upload Event File
    runs-on: ubuntu-latest
    permissions:
      contents: read # Needed for actions/upload-artifact
    steps:
      - name: Upload GitHub Event File
        uses: actions/upload-artifact@v4
        with:
          name: github-event-file
          path: ${{ github.event_path }}