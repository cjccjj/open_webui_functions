name: Publish Test Results

on:
  workflow_run:
    # Specify the name of your first workflow (from python-ci.yml)
    workflows: ["Python CI"]
    types:
      - completed # Trigger when the 'Python CI' workflow completes

jobs:
  publish:
    name: Publish Pytest Results
    runs-on: ubuntu-latest
    # Only run if the original workflow didn't get skipped
    if: github.event.workflow_run.conclusion != 'skipped'

    permissions:
      # These are the permissions needed for the EnricoMi action to publish checks and comments
      checks: write
      pull-requests: write
      contents: read # Needed for some internal operations, especially in private repos
      issues: read # Needed for some internal operations, especially in private repos
      actions: read # Crucial for actions/download-artifact to access workflow run artifacts

    steps:
    - name: Download GitHub Event File
      uses: actions/download-artifact@v4
      with:
        name: github-event-file
        path: artifacts/event-file # Download to a specific sub-directory

    - name: Download All Test Results Artifacts
      # Use dawidd6/action-download-artifact for downloading all artifacts from a run_id
      # The default actions/download-artifact@v4 requires knowing artifact names explicitly
      uses: dawidd6/action-download-artifact@v3
      with:
        run_id: ${{ github.event.workflow_run.id }}
        path: artifacts/test-results # Download all test result artifacts here

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always() # Always try to publish results
      with:
        # Pass the original commit SHA from the workflow_run event
        commit: ${{ github.event.workflow_run.head_sha }}
        # Pass the downloaded event file to give context to the action
        event_file: artifacts/event-file/event.json
        # Pass the original event name (e.g., 'pull_request', 'push')
        event_name: ${{ github.event.workflow_run.event }}
        # Point to the downloaded test result files
        files: "artifacts/test-results/**/*.xml"
        check_name: Pytest Results (Python) # You can simplify this or keep matrix info if desired